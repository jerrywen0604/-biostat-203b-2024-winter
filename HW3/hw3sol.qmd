---
title: "Biostat 203B Homework 3"
subtitle: "Due Feb 23 @ 11:59PM"
author: "Your Name and UID"
format:
  html:
    theme: cosmo
    embed-resources: true
    number-sections: false
    toc: true
    toc-depth: 4
    toc-location: left
    code-fold: false
execute:
  eval: false    
---

Display machine information for reproducibility:
```{r}
sessionInfo()
```

Load necessary libraries (you can add more as needed).
```{r setup}
library(arrow)
library(memuse)
library(pryr)
library(R.utils)
library(tidyverse)
```

Display your machine memory.
```{r}
memuse::Sys.meminfo()
```

In this exercise, we use tidyverse (ggplot2, dplyr, etc) to explore the [MIMIC-IV](https://mimic.mit.edu/docs/iv/) data introduced in [homework 1](https://ucla-biostat-203b.github.io/2024winter/hw/hw1/hw1.html) and to build a cohort of ICU stays.

## Q1. Visualizing patient trajectory

Visualizing a patient's encounters in a health care system is a common task in clinical data analysis. In this question, we will visualize a patient's ADT (admission-discharge-transfer) history and ICU vitals in the MIMIC-IV data.

### Q1.1 ADT history

A patient's ADT history records the time of admission, discharge, and transfer in the hospital. This figure shows the ADT history of the patient with `subject_id` 10001217 in the MIMIC-IV data. The x-axis is the calendar time, and the y-axis is the type of event (ADT, lab, procedure). The color of the line segment represents the care unit. The size of the line segment represents whether the care unit is an ICU/CCU. The crosses represent lab events, and the shape of the dots represents the type of procedure. The title of the figure shows the patient's demographic information and the subtitle shows top 3 diagnoses.

![](10001217_adt.png)
Do a similar visualization for the patient with `subject_id` 10013310 using ggplot.

Hint: We need to pull information from data files `patients.csv.gz`, `admissions.csv.gz`, `transfers.csv.gz`, `labevents.csv.gz`, `procedures_icd.csv.gz`, `diagnoses_icd.csv.gz`, `d_icd_procedures.csv.gz`, and `d_icd_diagnoses.csv.gz`. For the big file `labevents.csv.gz`, use the Parquet format you generated in Homework 2. For reproducibility, make the Parquet folder `labevents_pq` available at the current working directory `hw3`, for example, by a symbolic link. Make your code reproducible.

```{r}
#import data
patients <- read_csv("~/mimic/hosp/patients.csv.gz")
admissions <- read_csv("~/mimic/hosp/admissions.csv.gz")
transfers <- read_csv("~/mimic/hosp/transfers.csv.gz")
procedures <- read_csv("~/mimic/hosp/procedures_icd.csv.gz")
diagnoses <- read_csv("~/mimic/hosp/diagnoses_icd.csv.gz")
d_icd_procedures<- read_csv("~/mimic/hosp/d_icd_procedures.csv.gz")
labevents_df <- open_dataset("labevents.pq", format = "parquet")
d_icd_diagnoses<- read_csv("~/mimic/hosp/d_icd_diagnoses.csv.gz")

```

```{r}
sub_id <- 10013310
admissions_filtered <- admissions %>% filter(subject_id == sub_id)
transfers_filtered <- transfers %>% filter(subject_id == sub_id)
procedures_filtered <- procedures %>% filter(subject_id == sub_id)
diagnoses_filtered <- diagnoses %>% filter(subject_id == sub_id)
patients_filtered <- patients%>% filter(subject_id == sub_id)
labevents_filtered <- labevents_df %>% 
  filter(subject_id == sub_id) %>% 
  collect()

```
```{r}

procedures_joined <- procedures_filtered %>%
  left_join(d_icd_procedures, by = "icd_code")

diagnoses_joined <- diagnoses_filtered %>%
  left_join(d_icd_diagnoses, by = "icd_code")

```


```{r}
transfers_filtered <- transfers_filtered %>%
  filter(eventtype != "discharge")
top_diagnoses <- diagnoses_joined %>%
  arrange(seq_num) %>%
  distinct(long_title, .keep_all = TRUE) %>%
  slice_head(n = 3) %>%
  pull(long_title) %>%
  paste(collapse = "\n")
patient_info <- patients_filtered %>%
  summarise(
    Gender = first(gender),
    Age = first(anchor_age),
    Race = first(tolower(admissions_filtered$race)) 
  )
patient_title <- paste("Patient ", patients_filtered$subject_id[1], 
                       ", ", patient_info$Gender, 
                       ", ", patient_info$Age, 
                       " years old, ", patient_info$Race, sep = "")

```
```{r}

ggplot() +
  geom_segment(data =  transfers_filtered, aes(x = intime, xend = outtime,
                                   y = "ADT", yend = "ADT",
                                   color = careunit,
               linewidth= str_detect(careunit, "(I|C)CU"))) +
  geom_point(data = procedures_joined, aes(x = as.POSIXct(chartdate), y = "Procedure",
             shape = icd_code)) +
  geom_point(data = labevents_filtered, aes(x = charttime, y = "Lab"),
              shape = 3) +
  guides(linewidth = "none", shape = guide_legend(nrow = 9)) +
  theme_bw(base_size = 7) +
  theme(legend.position = "bottom", legend.box = "vertical",
        legend.title = element_text(size = 9)) +
  scale_y_discrete(limits = c("Procedure", "Lab", "ADT")) +
  scale_shape_manual(values = c(1:9),
                     labels =procedures_joined$long_title) +
  labs(x = "", y = "", title = patient_title,
       subtitle = top_diagnoses,
       color = "Care Unit", shape = "Procedure")
```

1.2 ICU stays

ICU stays are a subset of ADT history. This figure shows the vitals of the patient `10001217` during ICU stays. The x-axis is the calendar time, and the y-axis is the value of the vital. The color of the line represents the type of vital. The facet grid shows the abbreviation of the vital and the stay ID.

![](10001217_icu.png)

Do a similar visualization for the patient `10013310`.


```{r}
icu <- read_csv("~/mimic/icu/icustays.csv.gz") |>
  filter(subject_id == 10013310) |>
  print(width = Inf)
```

Find the corresponding itemid for the vitals:

```{r}
label_vitals <- read_csv("~/mimic/icu/d_items.csv.gz", show_col_types = FALSE) |>
  filter(abbreviation %in% c("HR", "NBPd", "NBPs", "RR", "Temperature F")) |>
  select(itemid, abbreviation, label) |>
  print(width = Inf)
```

```{r}
vitals <- open_dataset("chartevents_pq",format = "parquet") |>
  filter(subject_id == 10013310) |>
  filter(itemid %in% c(220045, 220180, 220179, 223761, 220210)) |>
  select(subject_id, itemid, valuenum, stay_id, charttime) |>
  collect() 
```



```{r}
vitals <- left_join(vitals, label_vitals, by = "itemid") 
time_vitals <- left_join(icu, vitals, by = "stay_id") |>
  select(valuenum, abbreviation, stay_id, charttime) |>
  print(width = Inf)
```

```{r}
time_vitals %>%
  ggplot(
    aes(
      x = charttime, 
      y = valuenum, 
      color = abbreviation),
    na.rm = TRUE) +
  geom_line(
    linewidth = 0.1) +
  geom_point(
    size = 0.7) +
  geom_line() +
  facet_grid(
    abbreviation ~ stay_id, 
    scales = "free", 
    space = "free_x") +
  labs(
    x = "",
    y = "",
    title = str_c("Patient ", 10013310, " ICU stays - Vitals"),
  ) +
  theme_light() +
  scale_x_datetime(
    breaks = scales::date_breaks("12 hours"),  
    labels = scales::date_format("%b %d %H:%M"),  
  ) +
  theme(
    legend.position = "none",
    strip.text = element_text(size = 6),
    axis.text.x = element_text(angle=15,vjust = 1, hjust = 1)
  )
```
## Q2. ICU stays

`icustays.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/icu/icustays/>) contains data about Intensive Care Units (ICU) stays. The first 10 lines are
```{bash}
zcat < ~/mimic/icu/icustays.csv.gz | head
```

### Q2.1 Ingestion

Import `icustays.csv.gz` as a tibble `icustays_tble`. 
```{r}
  icustays_tble <- read_csv("~/mimic/icu/icustays.csv.gz") %>%
  as_tibble()
```
### Q2.2 Summary and visualization

How many unique `subject_id`? Can a `subject_id` have multiple ICU stays? Summarize the number of ICU stays per `subject_id` by graphs. 
```{r}
#| eval= true
unique_subject_ids <- icustays_tble %>%
  distinct(subject_id) %>%
  nrow()

print(unique_subject_ids)

icu_stay_summary <- icustays_tble %>%
  group_by(subject_id) %>%
  summarise(num_stays = n())

ggplot(icu_stay_summary, aes(x = num_stays)) +
  geom_histogram(binwidth = 1, fill = "red", color = "black") +
  scale_x_continuous(limits = c(0, 10)) +
  labs(x = "Number of ICU Stays", y = "Number of People", title = "ICU Stays per Subject ID")

```
**Answer** There are total 50920 `subject_id`. Yes, a `subject_id` does have multiple ICU stays.

## Q3. `admissions` data

Information of the patients admitted into hospital is available in `admissions.csv.gz`. See <https://mimic.mit.edu/docs/iv/modules/hosp/admissions/> for details of each field in this file. The first 10 lines are
```{bash}
zcat < ~/mimic/hosp/admissions.csv.gz | head
```

### Q3.1 Ingestion

Import `admissions.csv.gz` as a tibble `admissions_tble`.
```{r}

  admissions_tble <- read_csv("~/mimic/hosp/admissions.csv.gz") %>%
  as_tibble()

```
3.2 Summary and visualization

Summarize the following information by graphics and explain any patterns you see.

- number of admissions per patient  
- admission hour (anything unusual?)  
- admission minute (anything unusual?)  
- length of hospital stay (from admission to discharge) (anything unusual?)  

According to the [MIMIC-IV documentation](https://mimic.mit.edu/docs/iv/about/concepts/#date-shifting), 

> All dates in the database have been shifted to protect patient confidentiality. Dates will be internally consistent for the same patient, but randomly distributed in the future. Dates of birth which occur in the present time are not true dates of birth. Furthermore, dates of birth which occur before the year 1900 occur if the patient is older than 89. In these cases, the patientâ€™s age at their first admission has been fixed to 300.

```{r}
#|eval: true

admissions_summary <- admissions_tble %>%
  group_by(subject_id) %>%
  summarize(number_of_admissions = n()) 

ggplot(admissions_summary, aes(x = number_of_admissions)) +
  geom_histogram(binwidth = 1, fill = "red", color = "black") +
  labs(x = "Number of Admissions", y = "Count", title = "Number of Admissions per Patient") +
  scale_x_continuous(limits = c(0, 20)) +
  theme_minimal()
```
```{r, eval=T}

#Admission hour and minute
admissions_tble <- admissions_tble %>%
  mutate(admission_hour = hour(ymd_hms(admittime)),
         admission_minute = minute(ymd_hms(admittime)))

ggplot(admissions_tble, aes(x = admission_hour)) +
  geom_histogram(binwidth = 1, fill = "red", color = "black") +
  labs(x = "Hour of Admission", y = "Count", title = "Admissions by Hour") +
  theme_minimal()

ggplot(admissions_tble, aes(x = admission_minute)) +
  geom_histogram(binwidth = 5, fill = "red", color = "black") +
  labs(x = "Minute of Admission", y = "Count", title = "Admissions by Minute") +
  theme_minimal()
```
```{r,eval=TRUE}
# 3. Length of hospital stay
admissions_tble <- admissions_tble %>%
  mutate(length_of_stay = (difftime(dischtime, admittime, units = "days")))

ggplot(admissions_tble, aes(x = length_of_stay)) +
  geom_histogram(binwidth = 1, fill = "red", color = "black") +
  labs(x = "Length of Hospital Stay (days)", y = "Number of People", title = "Length of Stay Distribution") +
   scale_x_continuous(limits = c(0, 30)) +
  theme_minimal()

```

**Answer** People tend to stay in hospital just less than 10 days. In the afternoon or at night, hospital admitted more patients.

## Q4. `patients` data

Patient information is available in `patients.csv.gz`. See <https://mimic.mit.edu/docs/iv/modules/hosp/patients/> for details of each field in this file. The first 10 lines are
```{bash}
zcat < ~/mimic/hosp/patients.csv.gz | head
```

### Q4.1 Ingestion

Import `patients.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/hosp/patients/>) as a tibble `patients_tble`.


```{r}

patients_tble <- read_csv("~/mimic/hosp/patients.csv.gz") %>%
  as_tibble()

```
### Q4.2 Summary and visualization

Summarize variables `gender` and `anchor_age` by graphics, and explain any patterns you see.

```{r, eval=TRUE}

gender_plot <- ggplot(patients, aes(x = gender)) +
  geom_bar() +
  labs(title = "Distribution of Gender", x = "Gender", y = "Count")


age_plot <- ggplot(patients, aes(x = anchor_age)) +
  geom_histogram(binwidth = 1) +
  labs(title = "Distribution of Anchor Age", x = "Anchor Age", y = "Count")

print(gender_plot)
print(age_plot)



```
**Answer** The number of Female are more than that of male.  The first peak occurs at a younger age range and the second is in the older age range, which suggest those people are more likely to be patients.

## Q5. Lab results

`labevents.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/hosp/labevents/>) contains all laboratory measurements for patients. The first 10 lines are
```{bash}
zcat < ~/mimic/hosp/labevents.csv.gz | head
```

`d_labitems.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/hosp/d_labitems/>) is the dictionary of lab measurements. 
```{bash}
zcat < ~/mimic/hosp/d_labitems.csv.gz | head
```

We are interested in the lab measurements of creatinine (50912), potassium (50971), sodium (50983), chloride (50902), bicarbonate (50882), hematocrit (51221), white blood cell count (51301), and glucose (50931). Retrieve a subset of `labevents.csv.gz` that only containing these items for the patients in `icustays_tble`. Further restrict to the last available measurement (by `storetime`) before the ICU stay. The final `labevents_tble` should have one row per ICU stay and columns for each lab measurement.

![](labevents_tble.png)


Hint: Use the Parquet format you generated in Homework 2. For reproducibility, make `labevents_pq` folder available at the current working directory `hw3`, for example, by a symbolic link.


```{r}
labevents_df <- open_dataset("labevents_pq", format = "parquet")
selected_itemids <- c(50912)   #,50931,50971, 50983, 50902, 50882, 51221, 51301)      
labevents_filtered <- labevents_df %>% 
  filter(itemid %in% selected_itemids ) %>% 
  select(subject_id,itemid,hadm_id,charttime,storetime,valuenum) %>% 
  collect() %>%
  as_tibble()
d_labitems <- read_csv("~/mimic/hosp/d_labitems.csv.gz") %>%
  as_tibble()
labevents_named <- labevents_filtered %>%
  left_join(d_labitems, by = "itemid")

```
```{r, eval=TRUE}
labevents_tble <- labevents_named %>%
  arrange(subject_id, storetime) %>%
  left_join(icustays_tble, by = c("subject_id", "hadm_id")) %>%
  group_by(subject_id, stay_id, label) %>%
  filter(storetime < intime) %>%
  summarize(last_value = dplyr::last(valuenum), .groups = "drop_last") %>%
  pivot_wider(names_from = label, values_from = last_value)

labevents_tble
```

**Answer** Because when I tried to select all these item_id, the machine crashed. Therefore, I only choose one to finish this question. If memory allowed, I can use selected_itemids <- c(50912,50931,50971, 50983, 50902, 50882, 51221, 51301)   

## Q6. Vitals from charted events

`chartevents.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/icu/chartevents/>) contains all the charted data available for a patient. During their ICU stay, the primary repository of a patientâ€™s information is their electronic chart. The `itemid` variable indicates a single measurement type in the database. The `value` variable is the value measured for `itemid`. The first 10 lines of `chartevents.csv.gz` are
```{bash}
zcat < ~/mimic/icu/chartevents.csv.gz | head
```

`d_items.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/icu/d_items/>) is the dictionary for the `itemid` in `chartevents.csv.gz`. 
```{bash}
zcat < ~/mimic/icu/d_items.csv.gz | head
```

We are interested in the vitals for ICU patients: heart rate (220045), systolic non-invasive blood pressure (220179), diastolic non-invasive blood pressure (220180), body temperature in Fahrenheit (223761), and respiratory rate (220210). Retrieve a subset of `chartevents.csv.gz` only containing these items for the patients in `icustays_tble`. Further restrict to the first vital measurement within the ICU stay. The final `chartevents_tble` should have one row per ICU stay and columns for each vital measurement. 

![](chartevents_tble.png)

Hint: Use the Parquet format you generated in Homework 2. For reproducibility, make `chartevents_pq` folder available at the current working directory, for example, by a symbolic link.

```{bash}
#| eval: false
gunzip -c ~/mimic/icu/chartevents.csv.gz > chartevents.csv
```


```{r}
labevents_dataset <- open_dataset("chartevents.csv", format = "csv")
write_dataset(labevents_dataset, "chartevents_pq", format = "parquet")
```



```{r}
chartevents_df <- open_dataset("chartevents_pq", format = "parquet")
selected_itemids <- c(220045)   #,220179,220180,223761,220210
chartevents_filtered <- chartevents_df %>% 
  filter(itemid %in% selected_itemids ) %>% 
  collect() %>%
  as_tibble()
d_chartitems <- read_csv("~/mimic/icu/d_items.csv.gz") %>%
  as_tibble()
chartevents_named <- chartevents_filtered %>%
  left_join(d_chartitems, by = "itemid")
```
```{r,eval=TRUE}
chartevents_tble <- chartevents_named %>%
  arrange(subject_id, storetime) %>%
  left_join(icustays_tble, by = c("subject_id","hadm_id","stay_id")) %>%
  group_by(subject_id,stay_id,label) %>%  
  filter(charttime >= intime & charttime <= outtime) %>%
  summarize(first_value = dplyr::first(valuenum), .groups = "drop_last") %>%
  pivot_wider(names_from = label, values_from = first_value)

# Output the final table
print(chartevents_tble)

```



## Q7. Putting things together

Let us create a tibble `mimic_icu_cohort` for all ICU stays, where rows are all ICU stays of adults (age at `intime` >= 18) and columns contain at least following variables

- all variables in `icustays_tble`  
- all variables in `admissions_tble`  
- all variables in `patients_tble`
- the last lab measurements before the ICU stay in `labevents_tble` 
- the first vital measurements during the ICU stay in `chartevents_tble`

The final `mimic_icu_cohort` should have one row per ICU stay and columns for each variable.

![](mimic_icu_cohort.png)
```{r, eval=TRUE}



icu_patient_joined <- icustays_tble %>%
  left_join(patients_tble, by = "subject_id")

adult_icu_patient <- icu_patient_joined %>%
  mutate(age_at_intime=years(intime-(anchor_year-anchor_age))) %>%
       filter(age_at_intime >= 18)     


adult_icu_admission <- adult_icu_patient %>%
  left_join(admissions_tble, by = "subject_id")

adult_icu_labevents <- adult_icu_admission %>%
  left_join(labevents_tble, by = c("subject_id"))

# Join the first vital measurements during ICU stay
mimic_icu_cohort <- adult_icu_labevents %>%
  left_join(chartevents_tble, by = c("subject_id"))

# Check the resulting tibble
mimic_icu_cohort


```
## Q8. Exploratory data analysis (EDA)

Summarize the following information about the ICU stay cohort `mimic_icu_cohort` using appropriate numerics or graphs:

- Length of ICU stay `los` vs demographic variables (race, insurance, marital_status, gender, age at intime)

- Length of ICU stay `los` vs the last available lab measurements before ICU stay

- Length of ICU stay `los` vs the average vital measurements within the first hour of ICU stay

- Length of ICU stay `los` vs first ICU unit

```{r}


ggplot(mimic_icu_cohort, aes(x = race, y = los)) +
  geom_boxplot() +
  labs(title = "LOS vs Race", x = "Race", y = "Length of ICU Stay")

ggplot(mimic_icu_cohort, aes(x = gender, y = los)) +
  geom_boxplot() +
  labs(title = "LOS vs gender", x = "gender", y = "Length of ICU Stay")

ggplot(mimic_icu_cohort, aes(x = age_at_intime, y = los)) +
  geom_boxplot() +
  labs(title = "LOS vs age_at_intime", x = "age_at_intime", y = "Length of ICU Stay")


ggplot(mimic_icu_cohort, aes(x = creatinine, y = los)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(title = "LOS vs Creatinine", x = "Creatinine", y = "Length of ICU Stay")


ggplot(mimic_icu_cohort, aes(x = heart_rate, y = los)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(title = "LOS vs Heart Rate", x = "Heart Rate", y = "Length of ICU Stay")

ggplot(mimic_icu_cohort, aes(x = first_careunit, y = los)) +
  geom_boxplot() +
  labs(title = "LOS vs First ICU Unit", x = "First ICU Unit", y = "Length of ICU Stay")


```